'use strict';

var ttn = require('ttn');
const {base64encode, base64decode} = require('nodejs-base64');

function ascii_to_hex(str)
  {
	var arr1 = [];
	for (var n = 0, l = str.length; n < l; n ++) 
     {
		var hex = Number(str.charCodeAt(n)).toString(16);
		arr1.push(hex);
	 }
	return arr1.join('');
   }

var appEUI = 'soil-sensor-with-lora@ttn';
var accessKey = 'NNSXS.LBQ4S6AD7QYQDNMHDOJY3ZXIJMSMJGUR3U44BJA.LB7I2B34GMIXKOOPVVCMUI3JIH77VOIOEF6AEFLDD2OTJSVWTGXA';

var client = new ttn.Client('eu1.cloud.thethings.network', appEUI, accessKey);

client.on('connect', function () {
	console.log('[DEBUG]', 'Connected');
});

client.on('error', function (err) {
	console.error('[ERROR]', err.message);
});

client.on('activation', function (e) {
	console.log('[INFO] ', 'Activated: ', e.devEUI);
});

client.on('uplink', function (msg) {
	console.info('[INFO] ', 'Uplink: ' + JSON.stringify(msg, null, 2));
});

client.on('Soil_Humidity', function (msg) {
	//console.info(msg);
	
	var rawData = msg.payload.uplink_message.frm_payload;
	var decoded = base64decode(rawData);
	var Hex = ascii_to_hex(decoded);
	//console.log(rawData);
	console.log(ascii_to_hex(decoded));
	console.log(parseInt(Hex,16));
});

client.on('uplink', function (msg) {

	// respond to every third message
	if (msg.counter % 3 === 0) {
		console.log('[DEBUG]', 'Downlink');

		var payload = new Buffer('4869', 'hex');
		client.downlink(msg.devEUI, payload);
	}
});